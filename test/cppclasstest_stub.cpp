
// WARNING: This file is automatically generated by minscript with option "--makestubs".
//          This file will be overwritten, do not change it manually!

#define _USE_DLL
#include "platform.h"
#include "dllexport.h"
#include "minhandle.h"
#include "minscript_cpp.h"
#include "minnativehlp.h"
#include "minip.h"

#include "cppclasstest.h"


int CppClassTest_CppClassTest(  )
{
	return (int)new CppClassTest(  );
}

int CppClassTest_CppClassTest( int arg0, double arg1 )
{
	return (int)new CppClassTest( arg0, arg1 );
}

int CppClassTest_CppClassTest( const string& arg0 )
{
	return (int)new CppClassTest( arg0 );
}

void __Destructor_CppClassTest( int pThis )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		delete pClass;
	}
}

void CppClassTest_f( int pThis )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		pClass->f(  );
	}
}

int CppClassTest_GetInt( int pThis )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		return pClass->GetInt(  );
	}
	return 0;
}

void CppClassTest_SetInt( int pThis, int arg0 )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		pClass->SetInt( arg0 );
	}
}

double CppClassTest_GetDouble( int pThis )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		return pClass->GetDouble(  );
	}
	return 0;
}

void CppClassTest_SetDouble( int pThis, double arg0 )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		pClass->SetDouble( arg0 );
	}
}

string CppClassTest_GetString( int pThis )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		return pClass->GetString(  );
	}
	return 0;
}

void CppClassTest_SetString( int pThis, const string& arg0 )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		pClass->SetString( arg0 );
	}
}

double CppClassTest_Calculate( int pThis, double arg0 )
{
	CppClassTest * pClass = (CppClassTest*)pThis;

	if( pClass )
	{
		return pClass->Calculate( arg0 );
	}
	return 0;
}



extern "C" bool CPPDLLEXPORT minRegisterNativeFunctions( minInterpreterEnvironment & aEnvironment )
{
	minNativeFcnInterface * pFcn;

	pFcn = new NativeVoidFcnWrapper1<string>( TestFcn, "void TestFcn( string );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );

	// additional registrations
	pFcn = new NativeFcnWrapper0<int>( CppClassTest_CppClassTest, "int CppClassTest_CppClassTest(  );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeFcnWrapper2<int,int,double>( CppClassTest_CppClassTest, "int CppClassTest_CppClassTest( int arg0, double arg1 );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeFcnWrapper1<int,const string&>( CppClassTest_CppClassTest, "int CppClassTest_CppClassTest( const string& arg0 );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeVoidFcnWrapper1<int>( __Destructor_CppClassTest, "void __Destructor_CppClassTest( int pThis );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeVoidFcnWrapper1<int>( CppClassTest_f, "void CppClassTest_f( int pThis );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeFcnWrapper1<int,int>( CppClassTest_GetInt, "int CppClassTest_GetInt( int pThis );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeVoidFcnWrapper2<int,int>( CppClassTest_SetInt, "void CppClassTest_SetInt( int pThis, int arg0 );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeFcnWrapper1<double,int>( CppClassTest_GetDouble, "double CppClassTest_GetDouble( int pThis );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeVoidFcnWrapper2<int,double>( CppClassTest_SetDouble, "void CppClassTest_SetDouble( int pThis, double arg0 );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeFcnWrapper1<string,int>( CppClassTest_GetString, "string CppClassTest_GetString( int pThis );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeVoidFcnWrapper2<int,const string&>( CppClassTest_SetString, "void CppClassTest_SetString( int pThis, const string& arg0 );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );
	pFcn = new NativeFcnWrapper2<double,int,double>( CppClassTest_Calculate, "double CppClassTest_Calculate( int pThis, double arg0 );" );
	aEnvironment.AddFunction( minHandle<minFunctionDeclarationNode>( new minNativeFunctionDeclarationNode( pFcn ) ) );

	return true;
}
